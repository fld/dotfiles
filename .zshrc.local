export EDITOR=vim
export HISTSIZE=1000000
export SAVEHIST=1000000
type nproc &>/dev/null && 
    export DEB_BUILD_OPTIONS="parallel=$(nproc)"

# Path
[ -e "$HOME/bin" ] &&
    export PATH="$HOME/bin:$PATH"
[ -e "$HOME/local/bin" ] &&
    export PATH="$HOME/local/bin:$PATH"
[ -e "$HOME/.local/bin" ] &&
    export PATH="$HOME/.local/bin:$PATH"
[ -e "$HOME/dotfiles/bin" ] &&
    export PATH="$HOME/dotfiles/bin:$PATH"
# Custom / machine specific
[ -e "$HOME/main/bin" ] &&
    export PATH="$HOME/main/bin:$PATH"
[ -e /usr/ha/bin ] &&
    export PATH="/usr/ha/bin:$PATH"

# Hostname-based prompt colors for grml zsh
source $HOME/dotfiles/bin/grml-zsh-prompt-colors.sh

# Libvirt
[[ $(hostname) == 'main' ]] &&
    export LIBVIRT_DEFAULT_URI='qemu:///system'

# Heroku / Travis
#export PATH="$HOME/.rbenv/bin:$HOME/heroku-client/bin:$PATH"
#eval "$(rbenv init -)"
#[ -f ~/.travis/travis.sh ] &&
#    source ~/.travis/travis.sh

# OTPW
if [ "$SSH_TTY" -a -f $HOME/.otpw ]; then
  PW_LINES=$(wc -l <$HOME/.otpw)
  PW_USED=$(grep -- ---- $HOME/.otpw | wc -l)
  echo "OTPW: $PW_USED/`echo $PW_LINES-2 | bc` used"
fi

# zplug
if [ ! -e $HOME/.zplug/init.zsh ]; then
    echo "zplug: init.zsh not found. Fetching latest installer.zsh.."
    type wget || sudo apt install wget
    zsh <(wget -O- "https://raw.githubusercontent.com/zplug/installer/master/installer.zsh")
fi
source $HOME/.zplug/init.zsh
zplug "tmux-plugins/tpm" # tmux plugin manager
zplug "plugins/git", from:oh-my-zsh # GIT aliases
zplug "micrenda/zsh-nohup" # ^h for backgrounding
zplug "MichaelAquilina/zsh-you-should-use" # Remind about aliases
zplug "zdharma/history-search-multi-word" # Better ^r search
zplug "zsh-users/zsh-syntax-highlighting" # Color prompt
zplug 'zplug/zplug', hook-build:'zplug --self-manage'
if ! zplug check --verbose; then
    printf "Install zplug? [y/N]: "
    if read -q; then
        echo; zplug install
    fi
fi
zplug load

# Autojump
[ -e /usr/share/autojump/autojump.sh ] && 
    source /usr/share/autojump/autojump.sh

# Functions
# tmux title -wrapper for ssh
ssh() {
    if [[ $(ps -p $(ps -p $$ -o ppid=) -o comm=) =~ tmux ]]; then
        tmux set-window-option allow-rename off
        tmux rename-window "$(echo $* | rev | cut -d ' ' -f1 | rev | cut -d . -f 1)"
        command ssh "$@"
        tmux set-window-option allow-rename on
    else
        command ssh "$@"
    fi
}

# TODO/W-I-P: dotfiles binding -wrapper for systemd-nspawn
ns_dotfiles=("--bind-ro=$HOME/dotfiles" "--bind-ro=$HOME/.zplug")
for f in $HOME/dotfiles/.*; do
    [[ $f != */@(.|..) && $f -ef $HOME/${f##*/} ]] &&
        ns_dotfiles+=("--bind-ro=$f:$HOME/${f##*/}")
done
systemd-nspawn-wip() { command sudo systemd-nspawn ${^ns_dotfiles} $@; } # man zshexpn(1) ${^spec}

# Basic
doc() { [[ -d "/usr/share/doc/$1" ]] && vim "/usr/share/doc/$1" || ls -lh /usr/share/doc/$1*; }
mkalias() { name=$1;shift;echo "alias $name='$*'" >> ~/.zshrc.local;source ~/.zshrc.local;tail -n1 ~/.zshrc.local; }
bgp() { $@ &>/dev/null & disown; }
md5() { echo -n "$1" | md5sum; }
title() { echo -en "\033]2;$1\007"; }
fe() { find . -iname '*'"$1"'*' -exec $2 {} \; ; }  # find a file and run $2 on it
sprunge() { curl -F 'sprunge=<-' http://sprunge.us < "${1:-/dev/stdin}"; }

# Specialized
fld.journaltail() { sudo journalctl -f _TRANSPORT=kernel + $(sudo journalctl -F _COMM | sed -e 's/cron//' -e 's/^sudo//' -e 's/^/_COMM=/' | tr "\n" " ") }
fld.syslogtail() { sudo watch 'grep -vi -e "cron" -e "eth0:" -e "SMART Usage" /var/log/syslog | tail -n 20' }
inotifylist() { sudo ps -p $(find /proc/*/fd/* -type l -lname 'anon_inode:inotify' -print 2> /dev/null | sed -e 's/^\/proc\/\([0-9]*\)\/.*/\1/') }
backuppcwatch() { sudo watch 'lsof -n -u backuppc | egrep " (REG|DIR) " | egrep -v "( (mem|txt|cwd|rtd) |/LOG)" | awk "{print $9}"'; }
iommugroups() {
    find /sys/kernel/iommu_groups -maxdepth 1 -mindepth 1 -type d -exec \
        bash -c 'i="$1"; echo "### Group ${i##*/} ###";
        for j in "$i/devices/"*; do echo -n "    ";
            lspci -s "${j##*/}"; done' _ {} \;
}

# Aliases
alias fld.wwwlogs='sudo tail -n15 /var/log/apache2/access.log | grep -v 192.168.0.199'
alias fld.wwwwatch='watch -n 0.5 "sudo tail -n15 /var/log/apache2/access.log | grep -v 192.168.0.199"'
alias fld.sectorsizes='smartctls -p | grep -e size -e "/dev/sd[a-z]:" | grep -v Disk'
alias fld.kernlogwatchmdstat='watch -n1 "sudo dmesg -T | tail -n 15;cat /proc/mdstat;grep "." /sys/block/md?/md/mismatch_cnt"'
alias fld.adb='~/android-x86/android-sdk-linux/platform-tools/adb'
alias c='clear'
alias units='units -o %.20g'
alias mdd='sudo mdadm -D /dev/md0'
alias mdd1='sudo mdadm -D /dev/md1'
alias mdd2='sudo mdadm -D /dev/md2'
alias mdd3='sudo mdadm -D /dev/md3'
alias mdd4='sudo mdadm -D /dev/md4'
alias mdd5='sudo mdadm -D /dev/md5'
alias mde='sudo mdadm -E'
alias mdx='sudo mdadm -X'
alias mdb='sudo mdadm --examine-badblocks'
alias mismatches='grep "." /sys/block/md?/md/mismatch_cnt'
alias alignments='grep "." /sys/block/*/alignment_offset'
alias repairarrays='sudo tee /sys/block/md?/md/sync_action <<< repair'
alias checkarrays='sudo tee /sys/block/md?/md/sync_action <<< check'
alias idlearrays='sudo tee /sys/block/md?/md/sync_action <<< idle'
alias usbsmartctl='sudo smartctl -T permissive -d sat'
alias dfc='df -Ph | column -t'
alias aliases='grep -e "^alias" ~/.bashrc ~/.zshrc ~/.zshrc.local'
alias sourcezshrc='source ~/.zshrc'
alias zshrc='vim ~/.zshrc.local;sourcezshrc'
alias smblistusers='sudo pdbedit -L -v'
alias ports='netstat -tulanp'
alias firewall='sudo /sbin/iptables -L -n -v --line-numbers'
alias swappers='smem -k -s swap'
alias d1='sudo dmesg -Tw'
alias d2='multitail /var/log/syslog'
alias cifsumount='sudo umount -a -t cifs -l'
alias udevreload='sudo udevadm control --reload'
alias apt-frankensteins='apt-show-versions | grep -e "testing" -e "unstable" -e "/sid" -e "*manually*" -e "No available" -e "newer than"'
alias apt-backports='apt-show-versions | grep backports'
alias upgradekernel='sudo apt-get -t jessie-backports install linux-image-amd64'
alias maskedunits='systemctl list-units --all | grep masked'
alias update-initramfs-running='sudo update-initramfs -u -k "$(uname -r)"'
alias audittail='sudo multitail /var/log/audit/audit.log'
alias apt-show-holds='dpkg --get-selections | grep hold'
alias failedunits='sudo systemctl --all | grep failed'
alias dpkg-dist-list='find /etc/ -name "*.dpkg-dist" -o -name "*.dpkg-new" -o -name "*.dpkg-old" -o -name "*.ucf-dist" -o -name "*.ucf-new" -o -name "*.ucf-old" | sort'
alias aga='sudo apt-get autoremove'
alias update-grml-zshrc='wget -O ~/dotfiles/.zshrc https://git.grml.org/f/grml-etc-core/etc/zsh/zshrc'
alias zplug-update='zplug update;zplug clean'
alias dotfiles-push='cd ~/dotfiles; git status; read "?Press any key to continue..."; git nccommit; gp; cd -; sourcezshrc'
alias dotfiles-update='git -C ~/dotfiles pull origin master; sourcezshrc'
alias aga2='sudo apt-get purge $(deborphan); sudo apt-get autoremove; sudo apt-get autoclean'
alias agp='sudo apt-get purge'
alias aga3='sudo apt-get purge $(deborphan --find-config --libdevel); sudo apt-get purge $(deborphan --guess-all); sudo apt-get autoremove; sudo apt-get autoclean'
alias awhy='aptitude why'
alias dpkglistgrep='dpkg -l | grep'
alias aptchanges='aptitude changelog'
alias poweronhours='for d in /dev/sd?; do echo -n $d; sudo smartctl -A $d | grep Power_On; done'
alias aa-logprof-auditlog='sudo aa-logprof -f <(sudo aa-decode <(sudo cat /var/log/audit/audit.log /var/log/audit/audit.log.1))'
alias agbd='sudo apt-get build-dep'
alias ta='tmux attach'
alias ntp-update='sudo systemctl stop ntp; sudo ntpd -gq; sudo systemctl start ntp'
alias apt-get-no-proxy='apt-get -o Acquire::http::Proxy=false'
alias screen-grml='screen -c .screenrcgrml'
alias aga4='agp $(apt-frankensteins | cut -f1 -d " ")'
alias flux_led='python3 /home/fld/.local/lib/python3.5/site-packages/flux_led/__main__.py'
alias .o='cd /var/lib/libvirt/images'
