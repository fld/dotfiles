export EDITOR=vim
export HISTSIZE=1000000
export SAVEHIST=1000000
type nproc &>/dev/null && 
    export DEB_BUILD_OPTIONS="parallel=$(nproc)"
if [[ $(hostname) == 'main' ]]; then
    export LIBVIRT_DEFAULT_URI='qemu:///system'
fi

# tmux-powerline
tmux-powerline-precmd() { $([ -n "$TMUX" ] && tmux setenv TMUXPWD_$(tmux display -p "#D" | tr -d %) "$PWD") }
add-zsh-hook precmd tmux-powerline-precmd

# Path
[ -e "$HOME/bin" ] &&
    export PATH="$HOME/bin:$PATH"
[ -e "$HOME/local/bin" ] &&
    export PATH="$HOME/local/bin:$PATH"
[ -e "$HOME/.local/bin" ] &&
    export PATH="$HOME/.local/bin:$PATH"
[ -e "$HOME/dotfiles/bin" ] &&
    export PATH="$HOME/dotfiles/bin:$PATH"

# Custom / machine specific
[ -e "$HOME/main/bin" ] &&
    export PATH="$HOME/main/bin:$PATH"
[ -e /usr/ha/bin ] &&
    export PATH="/usr/ha/bin:$PATH"

# Hostname-based prompt colors for grml zsh
source $HOME/dotfiles/bin/hostname-grml-zsh-colors.sh

# Heroku / Travis
#export PATH="$HOME/.rbenv/bin:$HOME/heroku-client/bin:$PATH"
#eval "$(rbenv init -)"
#[ -f ~/.travis/travis.sh ] &&
#    source ~/.travis/travis.sh

# OTPW
if [ "$SSH_TTY" -a -f $HOME/.otpw ]; then
  PW_LINES=$(wc -l <$HOME/.otpw)
  PW_USED=$(grep -- ---- $HOME/.otpw | wc -l)
  echo "OTPW: $PW_USED/`echo $PW_LINES-2 | bc` used"
fi

# zplug
source $HOME/dotfiles/zplug/init.zsh
zplug "plugins/git",   from:oh-my-zsh # GIT aliases
zplug "supercrabtree/k" # 'k' listing for GIT
zplug "micrenda/zsh-nohup" # ^h for backgrounding
zplug "zdharma/history-search-multi-word" # Better ^r search
zplug "MichaelAquilina/zsh-you-should-use" # Remind about aliases
zplug "zsh-users/zsh-syntax-highlighting" # Color prompt
zplug "psprint/zsh-cmd-architect" # ^t CMD editor

if ! zplug check --verbose; then
    printf "Install? [y/N]: "
    if read -q; then
        echo; zplug install
    fi
fi
zplug load --verbose

# Functions
function bgp() { $@ &>/dev/null & disown; }
function md5() { echo -n "$1" | md5sum; }
function fe() { find . -iname '*'"$1"'*' -exec $2 {} \; ; }  # find a file and run $2 on it
function sprunge() { curl -F 'sprunge=<-' http://sprunge.us < "${1:-/dev/stdin}"; }
function mkalias() { alias "$*" && echo alias "$*" >> ~/.zshrc.local }
function title { echo -en "\033]2;$1\007"; }
function journaltail { sudo journalctl -f _TRANSPORT=kernel + $(sudo journalctl -F _COMM | sed -e 's/cron//' -e 's/^sudo//' -e 's/^/_COMM=/' | tr "\n" " ") }
function inotifylist { sudo ps -p $(find /proc/*/fd/* -type l -lname 'anon_inode:inotify' -print 2> /dev/null | sed -e 's/^\/proc\/\([0-9]*\)\/.*/\1/') }
function syslogtail { sudo watch 'grep -vi -e "cron" -e "eth0:" -e "SMART Usage" /var/log/syslog | tail -n 20' }
function backupwatch() { sudo watch 'lsof -n -u backuppc | egrep " (REG|DIR) " | egrep -v "( (mem|txt|cwd|rtd) |/LOG)" | awk "{print $9}"'; }

# Aliases
alias wwwlogs='sudo tail -n15 /var/log/apache2/access.log | grep -v 192.168.0.199'
alias wwwwatch='watch -n 0.5 "sudo tail -n15 /var/log/apache2/access.log | grep -v 192.168.0.199"'
alias units='units -o %.20g'
alias mdd='sudo mdadm -D /dev/md0'
alias mdd1='sudo mdadm -D /dev/md1'
alias mdd2='sudo mdadm -D /dev/md2'
alias mde='sudo mdadm -E $1'
alias mdx='sudo mdadm -X $1'
alias mdb='sudo mdadm --examine-badblocks $1'
alias mdstatwatch='watch -n1 "dmesg -T | tail -n 30;cat /proc/mdstat"'
alias mismatches='grep "." /sys/block/md?/md/mismatch_cnt'
alias alignments='grep "." /sys/block/*/alignment_offset'
alias sectorsizes='smartctls -p | grep -e size -e "/dev/sd[a-z]:" | grep -v Disk'
alias repairarrays='sudo tee /sys/block/md?/md/sync_action <<< repair'
alias checkarrays='sudo tee /sys/block/md?/md/sync_action <<< check'
alias idlearrays='sudo tee /sys/block/md?/md/sync_action <<< idle'
alias usbsmartctl='sudo smartctl -T permissive -d sat'
alias dfc='df -Ph | column -t'
alias kernlog='dmesg -T | tail -n 50'
alias klog='kernlog'
alias kernlogwatch='watch -n1 "dmesg -T | tail -n 50"'
alias aliases='grep -e "^alias" ~/.bashrc ~/.zshrc ~/.zshrc.local'
alias sourcezshrc='source ~/.zshrc'
alias zshrc='vim ~/.zshrc.local'
alias smblistusers='sudo pdbedit -L -v'
alias ports='netstat -tulanp'
alias firewall='sudo /sbin/iptables -L -n -v --line-numbers'
alias swappers='smem -k -s swap'
alias dmtail='sudo dmesg -Tw'
alias cifsumount='sudo umount -a -t cifs -l'
alias udevreload='sudo udevadm control --reload'
alias apt-frankensteins='apt-show-versions | grep -e "testing" -e "unstable" -e "/sid" -e "*manually*" -e "No available" -e "newer than"'
alias apt-backports='apt-show-versions | grep backports'
alias upgradekernel='sudo apt-get -t jessie-backports install linux-image-amd64'
alias maskedunits='systemctl list-units --all | grep masked'
alias update-initramfs-running='sudo update-initramfs -u -k "$(uname -r)"'
alias audittail='sudo multitail /var/log/audit/audit.log'
alias apt-show-holds='dpkg --get-selections | grep hold'
alias failedunits='sudo systemctl --all | grep failed'
alias adb2='/home/fld/android-x86/android-sdk-linux/platform-tools/adb'
alias dpkg-dist-list='find /etc/ -name "*.dpkg-dist" -o -name "*.dpkg-new" -o -name "*.dpkg-old" -o -name "*.ucf-dist" -o -name "*.ucf-new" -o -name "*.ucf-old" | sort'
salias aga='apt-get autoremove'
alias update-grml-zshrc='wget -O ~/.zshrc https://git.grml.org/f/grml-etc-core/etc/zsh/zshrc'
alias update-antigen='curl -L git.io/antigen > ~/dotfiles/antigen.zsh'
